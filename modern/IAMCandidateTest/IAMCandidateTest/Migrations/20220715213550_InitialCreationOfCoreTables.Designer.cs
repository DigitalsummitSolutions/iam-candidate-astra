// <auto-generated />
using IAMCandidateTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IAMCandidateTest.Migrations
{
    [DbContext(typeof(IAMCandidateTestDbContext))]
    [Migration("20220715213550_InitialCreationOfCoreTables")]
    partial class InitialCreationOfCoreTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IAMCandidateTest.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<int>("LegCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxClassId")
                        .HasColumnType("int");

                    b.Property<int>("TaxFamilyId")
                        .HasColumnType("int");

                    b.Property<int>("TaxGenusId")
                        .HasColumnType("int");

                    b.Property<int>("TaxOrderId")
                        .HasColumnType("int");

                    b.Property<int>("TaxPhylumId")
                        .HasColumnType("int");

                    b.Property<int>("TaxSpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("WingCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxClassId");

                    b.HasIndex("TaxFamilyId");

                    b.HasIndex("TaxGenusId");

                    b.HasIndex("TaxOrderId");

                    b.HasIndex("TaxPhylumId");

                    b.HasIndex("TaxSpeciesId");

                    b.ToTable("Animal", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.CategoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryType", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Mineral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mineral", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxClass", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxFamily", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxGenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxGenus", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxOrder", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxPhylum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxPhylum", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxSpecies", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Vegetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vegetable", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Animal", b =>
                {
                    b.HasOne("IAMCandidateTest.Models.TaxClass", "TaxClass")
                        .WithMany()
                        .HasForeignKey("TaxClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxFamily", "TaxFamily")
                        .WithMany()
                        .HasForeignKey("TaxFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxGenus", "TaxGenus")
                        .WithMany()
                        .HasForeignKey("TaxGenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxOrder", "TaxOrder")
                        .WithMany()
                        .HasForeignKey("TaxOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxPhylum", "TaxPhylum")
                        .WithMany()
                        .HasForeignKey("TaxPhylumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxSpecies", "TaxSpecies")
                        .WithMany()
                        .HasForeignKey("TaxSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxClass");

                    b.Navigation("TaxFamily");

                    b.Navigation("TaxGenus");

                    b.Navigation("TaxOrder");

                    b.Navigation("TaxPhylum");

                    b.Navigation("TaxSpecies");
                });
#pragma warning restore 612, 618
        }
    }
}

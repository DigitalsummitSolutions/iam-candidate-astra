// <auto-generated />
using IAMCandidateTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IAMCandidateTest.Migrations
{
    [DbContext(typeof(IAMCandidateTestDbContext))]
    [Migration("20220715223941_AddSeveralLookupTables")]
    partial class AddSeveralLookupTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IAMCandidateTest.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<int>("LegCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxClassId")
                        .HasColumnType("int");

                    b.Property<int>("TaxFamilyId")
                        .HasColumnType("int");

                    b.Property<int>("TaxGenusId")
                        .HasColumnType("int");

                    b.Property<int>("TaxOrderId")
                        .HasColumnType("int");

                    b.Property<int>("TaxPhylumId")
                        .HasColumnType("int");

                    b.Property<int>("TaxSpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("WingCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxClassId");

                    b.HasIndex("TaxFamilyId");

                    b.HasIndex("TaxGenusId");

                    b.HasIndex("TaxOrderId");

                    b.HasIndex("TaxPhylumId");

                    b.HasIndex("TaxSpeciesId");

                    b.ToTable("Animal", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.CategoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Animal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Minderal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vegetable"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Diaphaneity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diaphaneity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Opaque"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Transparent"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.EdiblePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EdibleParts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Root"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fruit"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Leaf"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Seed"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tuber"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Luster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Luster", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Metallic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adamantine"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dull"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Vitreous"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Mineral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("DiaphaneityId")
                        .HasColumnType("int");

                    b.Property<decimal>("Hardness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LusterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpecificGravity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StreakId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("DiaphaneityId");

                    b.HasIndex("LusterId");

                    b.HasIndex("StreakId");

                    b.ToTable("Mineral", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.MineralColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MineralColor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dull Brown"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Varied"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Golden, yellow"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Reddish Brown"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Clear"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Streak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Streak", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Metallic copper red"
                        },
                        new
                        {
                            Id = 2,
                            Name = "None"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Golden, yellow"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Colorless"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxClass", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammalia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Aves"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Insecta"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Reptilia"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxFamily", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Felidae"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cacatuidae"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Struthionidae"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Caniformia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nymphalidae"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Colubridae"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxGenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxGenus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Felis"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nymphicus"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Struthio"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Canis"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Danaus"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thamnophis"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Carnivora"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Psittaciformes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Struthioniformes"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lepidoptera"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Squamata"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxPhylum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxPhylum", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chordata"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Arthropoda"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.TaxSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxSpecies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Catus"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hollandicus"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Camelus"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Familiaris"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Plexippus"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Brachystoma"
                        });
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Vegetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EdiblePartId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBotanicalFruit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EdiblePartId");

                    b.ToTable("Vegetable", (string)null);
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Animal", b =>
                {
                    b.HasOne("IAMCandidateTest.Models.TaxClass", "TaxClass")
                        .WithMany()
                        .HasForeignKey("TaxClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxFamily", "TaxFamily")
                        .WithMany()
                        .HasForeignKey("TaxFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxGenus", "TaxGenus")
                        .WithMany()
                        .HasForeignKey("TaxGenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxOrder", "TaxOrder")
                        .WithMany()
                        .HasForeignKey("TaxOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxPhylum", "TaxPhylum")
                        .WithMany()
                        .HasForeignKey("TaxPhylumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.TaxSpecies", "TaxSpecies")
                        .WithMany()
                        .HasForeignKey("TaxSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxClass");

                    b.Navigation("TaxFamily");

                    b.Navigation("TaxGenus");

                    b.Navigation("TaxOrder");

                    b.Navigation("TaxPhylum");

                    b.Navigation("TaxSpecies");
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Mineral", b =>
                {
                    b.HasOne("IAMCandidateTest.Models.MineralColor", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.Diaphaneity", "Diaphaneity")
                        .WithMany()
                        .HasForeignKey("DiaphaneityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.Luster", "Luster")
                        .WithMany()
                        .HasForeignKey("LusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMCandidateTest.Models.Streak", "Streak")
                        .WithMany()
                        .HasForeignKey("StreakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Diaphaneity");

                    b.Navigation("Luster");

                    b.Navigation("Streak");
                });

            modelBuilder.Entity("IAMCandidateTest.Models.Vegetable", b =>
                {
                    b.HasOne("IAMCandidateTest.Models.EdiblePart", "EdiblePart")
                        .WithMany()
                        .HasForeignKey("EdiblePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EdiblePart");
                });
#pragma warning restore 612, 618
        }
    }
}
